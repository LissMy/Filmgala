{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kurta\\\\OneDrive\\\\Documents\\\\GitHub\\\\Filmgala\\\\src\\\\components\\\\Explore\\\\Explore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getGenre, getMoviesWithGenreId } from \"../../api/movies\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport Paginate from \"../Paginate/Paginate\";\nimport styles from \"./Explore.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Explore = () => {\n  _s();\n\n  const [allGenres, setAllGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [movies, setMovies] = useState([]);\n  const [isMoreMoviesLoading, setIsMoreMoviesLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [isNearEnd, setIsNearEnd] = useState(false);\n\n  const fetchAllGenres = () => {\n    getGenre().then(res => {\n      if (!res) return;\n      setAllGenres(res.genres);\n      setSelectedGenres([res.genres[0]]);\n    });\n  };\n\n  const fetchMovies = page => {\n    if (selectedGenres.length === 0) return;\n    const ids = selectedGenres.map(item => item.id).join(\",\");\n    setIsMoreMoviesLoading(true);\n    getMoviesWithGenreId(ids, page).then(res => {\n      setIsMoreMoviesLoading(false);\n      if (!res) return;\n\n      if (page === 1) {\n        setTotalPages(res.total_pages);\n        setMovies(res.results);\n      } else {\n        setMovies(prev => [...prev, ...(res === null || res === void 0 ? void 0 : res.results)]);\n      }\n\n      setCurrentPage(res === null || res === void 0 ? void 0 : res.page);\n    });\n  };\n\n  const handleGenreClick = genre => {\n    const tempGenres = [...selectedGenres];\n    const currIndex = tempGenres.findIndex(item => item.id === genre.id);\n\n    if (currIndex < 0) {\n      tempGenres.push(genre);\n    } else {\n      if (selectedGenres.length > 1) tempGenres.splice(currIndex, 1);\n    }\n\n    setSelectedGenres(tempGenres);\n  };\n\n  const handlePaginate = () => {\n    if (isMoreMoviesLoading || currentPage >= totalPages) return;\n    fetchMovies(currentPage + 1);\n  };\n\n  useEffect(() => {\n    if (isNearEnd) handlePaginate();\n  }, [isNearEnd]);\n  useEffect(() => {\n    setCurrentPage(1);\n    fetchMovies(1);\n  }, [selectedGenres]);\n  useEffect(() => {\n    fetchAllGenres();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: allGenres.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.chip} ${selectedGenres.find(elem => elem.id === item.id) ? styles.activeChip : \"\"}`,\n        onClick: () => handleGenreClick(item),\n        children: item.name\n      }, item.id + item.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: \"Explore Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n      onIntersection: isNearEnd => setIsNearEnd(isNearEnd),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.body,\n        children: [movies.map((item, index) => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: item\n        }, item.id + index + \"\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)), isMoreMoviesLoading && /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Explore, \"mBLgSkMaHl4hVIzRerewZyhKHNI=\");\n\n_c = Explore;\nexport default Explore;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explore\");","map":{"version":3,"sources":["C:/Users/kurta/OneDrive/Documents/GitHub/Filmgala/src/components/Explore/Explore.js"],"names":["React","useEffect","useState","getGenre","getMoviesWithGenreId","MovieCard","Paginate","styles","Explore","allGenres","setAllGenres","selectedGenres","setSelectedGenres","movies","setMovies","isMoreMoviesLoading","setIsMoreMoviesLoading","currentPage","setCurrentPage","totalPages","setTotalPages","isNearEnd","setIsNearEnd","fetchAllGenres","then","res","genres","fetchMovies","page","length","ids","map","item","id","join","total_pages","results","prev","handleGenreClick","genre","tempGenres","currIndex","findIndex","push","splice","handlePaginate","container","header","chip","find","elem","activeChip","name","title","body","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { getGenre, getMoviesWithGenreId } from \"../../api/movies\";\r\nimport MovieCard from \"../MovieCard/MovieCard\";\r\nimport Paginate from \"../Paginate/Paginate\";\r\n\r\nimport styles from \"./Explore.module.css\";\r\n\r\nconst Explore = () => {\r\n  const [allGenres, setAllGenres] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n  const [isMoreMoviesLoading, setIsMoreMoviesLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [isNearEnd, setIsNearEnd] = useState(false);\r\n\r\n  const fetchAllGenres = () => {\r\n    getGenre().then((res) => {\r\n      if (!res) return;\r\n      setAllGenres(res.genres);\r\n      setSelectedGenres([res.genres[0]]);\r\n    });\r\n  };\r\n\r\n  const fetchMovies = (page) => {\r\n    if (selectedGenres.length === 0) return;\r\n    const ids = selectedGenres.map((item) => item.id).join(\",\");\r\n\r\n    setIsMoreMoviesLoading(true);\r\n    getMoviesWithGenreId(ids, page).then((res) => {\r\n      setIsMoreMoviesLoading(false);\r\n      if (!res) return;\r\n      if (page === 1) {\r\n        setTotalPages(res.total_pages);\r\n        setMovies(res.results);\r\n      } else {\r\n        setMovies((prev) => [...prev, ...res?.results]);\r\n      }\r\n      setCurrentPage(res?.page);\r\n    });\r\n  };\r\n\r\n  const handleGenreClick = (genre) => {\r\n    const tempGenres = [...selectedGenres];\r\n    const currIndex = tempGenres.findIndex((item) => item.id === genre.id);\r\n\r\n    if (currIndex < 0) {\r\n      tempGenres.push(genre);\r\n    } else {\r\n      if (selectedGenres.length > 1) tempGenres.splice(currIndex, 1);\r\n    }\r\n\r\n    setSelectedGenres(tempGenres);\r\n  };\r\n\r\n  const handlePaginate = () => {\r\n    if (isMoreMoviesLoading || currentPage >= totalPages) return;\r\n    fetchMovies(currentPage + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isNearEnd) handlePaginate();\r\n  }, [isNearEnd]);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n    fetchMovies(1);\r\n  }, [selectedGenres]);\r\n\r\n  useEffect(() => {\r\n    fetchAllGenres();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        {allGenres.map((item) => (\r\n          <div\r\n            key={item.id + item.name}\r\n            className={`${styles.chip} ${\r\n              selectedGenres.find((elem) => elem.id === item.id)\r\n                ? styles.activeChip\r\n                : \"\"\r\n            }`}\r\n            onClick={() => handleGenreClick(item)}\r\n          >\r\n            {item.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <p className={styles.title}>Explore Movies</p>\r\n      <Paginate onIntersection={(isNearEnd) => setIsNearEnd(isNearEnd)}>\r\n        <div className={styles.body}>\r\n          {movies.map((item, index) => (\r\n            <MovieCard movie={item} key={item.id + index + \"\"} />\r\n          ))}\r\n          {isMoreMoviesLoading && <b>Loading...</b>}\r\n        </div>\r\n      </Paginate>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n"]},"metadata":{},"sourceType":"module"}